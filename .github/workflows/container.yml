# This is a basic workflow to help you get started with Actions

name: Build Containers

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types:
      - created

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Docker meta
        id: meta-mubs
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            quay.io/adrianlucrececeleste/mubs
            docker.io/adrianlucrececeleste/mubs
            ghcr.io/adriankoshka/mubs
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule,
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Docker meta
        id: meta-mubs-cc
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            quay.io/adrianlucrececeleste/mubs-cc
            docker.io/adrianlucrececeleste/mubs-cc
            ghcr.io/adriankoshka/mubs-cc
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      -
        name: Login to Quay.io
        uses: docker/login-action@v1
        if: github.event_name != 'pull_request'
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build mubs
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/arm64
          tags: ${{ steps.meta-mubs.outputs.tags }}
          labels: ${{ steps.meta-mubs.outputs.labels }}
      -
        name: Build mubs-cc
        id: docker_cross_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: 'cross-compile.Dockerfile'
          tags: ${{ steps.meta-mubs-cc.outputs.tags }}
          labels: ${{ steps.meta-mubs-cc.outputs.labels }}